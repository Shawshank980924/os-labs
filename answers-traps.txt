1. Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf? 
a0,a1,a2;a2
2. Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.) 
compiler does the optimation for us, and replaced the f(8) with 12, socalled inline function
3. At what address is the function printf located? 
0x630
4. What value is in the register ra just after the jalr to printf in main? 
0x38
5. Run the following code.

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
What is the output?
He110 World
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?
0x726c6400
6. In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?
	printf("x=%d y=%d", 3);
5211
vprintf 共传入三个参数第三个是打印字符地址，存在a2中，这里的地址是printf传入参数栈指针，每打印完一个地址+8，所以只要看传入参数中的第三个寄存器内的内容即可，a0是fomat字符串指针，a1是3，a2就是第三个寄存器，当然里面的值不确定
      


